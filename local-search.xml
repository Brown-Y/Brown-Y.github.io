<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Paper Reading:smart insole for gait monitoring</title>
    <link href="/2025/04/19/pr-250419-scia-insole/"/>
    <url>/2025/04/19/pr-250419-scia-insole/</url>
    
    <content type="html"><![CDATA[<h1 id="文章基本信息">文章基本信息</h1><ul><li>标题：A wireless, self-powered smart insole for gait monitoring andrecognition via nonlinear synergistic pressure sensing</li><li>作者：Qi Wang, Hui Guan, Chen Wang, Peiming Lei, Hongwei Sheng,Huasheng Bi, Jinkun Hu, Chenhui Guo, Yichuan Mao, Jiao Yuan, MingjiaoShao, Zhiwen Jin, Jinghua Li, Wei Lan</li><li>DOI：10.1126/sciadv.adu1598</li></ul><h1 id="文章概述">文章概述</h1><h2 id="摘要">摘要</h2><p>本文介绍了一种用于步态监测和识别的无线自供电智能鞋垫系统。该系统采用非线性协同策略设计的CNT/ACET/PDMS压力传感器，在0- 225kPa范围内线性度高（R²&gt;0.999），经180,000次压缩测试性能稳定。利用柔性钙钛矿太阳能电池（FPSCs）供电，可将太阳能转化为电能存储在锂电池中。集成支持向量机（SVM）学习模型，能准确识别八种运动状态。该系统可实现足底压力的高时空分辨率监测、实时可视化和分析，在医疗保健、运动科学等领域有应用潜力。</p><h2 id="研究背景">研究背景</h2><p>-<strong>医疗需求</strong>：步态由骨骼、神经和肌肉系统协同产生，持续监测足底压力和步态对多种疾病（如帕金森病、中风、扁平足、糖尿病足等）的预防、诊断和治疗具有重要意义。然而，当前医疗中使用的压力传感平台受时间和空间限制，无法满足日常监测需求。-<strong>现有可穿戴设备的局限</strong>：将传感器集成到鞋子中的可穿戴电子设备是解决上述问题的有前景策略，但现有鞋内传感器存在诸多不足。压电和摩擦电传感器只能测量动态压力信号；电容式传感器抗干扰能力弱、测量电路复杂、采样率和精度低；电阻式传感器虽能测量静态和动态压力，但通常存在非线性响应、稳定性欠佳的问题，且系统供电也是一大挑战。-<strong>研究目标</strong>：为解决这些问题，本文旨在开发一种高度集成、自供电、无线的智能鞋垫系统，实现足底压力的高时空分辨率监测以及步态的实时可视化和分析，为医疗评估、个性化治疗和生物力学研究提供实用解决方案。</p><h1 id="研究细节">研究细节</h1><h2 id="fig1">Fig1</h2><p><img src="\img\pr_250419\Fig1A.png" /></p><p>使用智能鞋垫系统的典型场景，使用PDMS封装，包含上下电极，碳纳米管CNT、乙炔黑ACET、聚二甲基硅氧烷PDMS，PCB板上的数模转换器ADC收集压力信号转化为电信号，下层还有锂电池。</p><p><img src="\img\pr_250419\Fig1B.png" /></p><p>非线性协同系统示意，由于电阻传感器的非线性响应，作者提出了一种基于非线性协同机制的策略。将机械特性与电子特性相复合，通过灵敏度<span class="math display">$$S = \frac{\frac{I-I_0}{I_0}}{p-p_0}$$</span> 使测量对应函数能够线性化。</p><p><img src="\img\pr_250419\Fig1C.png" /></p><p>智能鞋垫系统的工作流程包括基于PSC的能量采集、基于非线性协同的压力数据采集、移动端足底压力分布可视化、基于SVM学习模型的数据分类。</p><p><img src="\img\pr_250419\Fig1D.png" /></p><p>实物图，提供了智能鞋垫系统和核心感测层在初始、折叠、扭曲和拉伸状态下的照片。</p><h2 id="fig2">Fig2</h2>]]></content>
    
    
    <categories>
      
      <category>paper reading notes</category>
      
      <category>triboelectric sensor</category>
      
    </categories>
    
    
    <tags>
      
      <tag>triboelectric sensor</tag>
      
      <tag>paper reading note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Paper Reading:tactile perception - triboelectric sensors</title>
    <link href="/2025/04/15/pr-250415-afm-aits/"/>
    <url>/2025/04/15/pr-250415-afm-aits/</url>
    
    <content type="html"><![CDATA[<h1 id="文章基本信息">文章基本信息</h1><p>·标题：Augmented Tactile Perception of Robotic Fingers Enabled by AI- Enhanced Triboelectric Multimodal Sensors</p><p>·作者：Xi Zhao, Zhongda Sun, and Chengkuo Lee</p><p>·DOI：10.1002/adfm.202409558</p><p>·关键词：artificial intelligence, object recognition, tactilesensing, triboelectric</p><p>·原文链接：https://advanced.onlinelibrary.wiley.com/doi/10.1002/adfm.202409558</p><h1 id="文章概述">文章概述</h1><p>本文提出一种多层结构设计的摩擦电多模态触觉传感器（TMTS），可同时识别不同材料、曲率和压力，实现不同模态的解耦以进行更精确检测。通过将传感器附着在机器人指尖并利用深度学习分析，定量曲率测量能更精确洞察物体几何特征，对12个抓取物体自动识别准确率达99.2%。该传感器还可准确识别机器人手不同触摸手势下物体的柔软度，准确率达94.1%，在未来机器人智能社会有广泛应用潜力。</p><h1 id="研究思路">研究思路</h1><ol type="1"><li><strong>提出研究问题</strong>：</li></ol><ul><li>在机器人技术发展中，触觉感知重要，但现有摩擦电机制用于触觉感知时对曲面检测探索有限。</li></ul><ol start="2" type="1"><li><strong>构建研究框架</strong>：</li></ol><ul><li>提出摩擦电多模态触觉传感器（TMTS），通过多层结构设计实现同时识别材料、曲率和压力。</li></ul><ol start="3" type="1"><li><strong>选择研究方法</strong>：</li></ol><ul><li>制作TMTS传感器并阐述其工作机制和设计策略。</li><li>进行实验测量与表征，如用示波器测量模拟电压信号，用测力仪进行相关测量，利用LSTM模型进行数据处理和分类任务。</li></ul><ol start="4" type="1"><li><strong>分析数据</strong>：</li></ol><ul><li>分析TMTS不同通道信号，如在曲率和材料表征中分析不同接触下的电压输出。</li><li>考虑压力对曲率和材料测量的影响并进行数据处理。</li><li>利用深度学习分析多模态信号进行物体分类和软度感知。</li></ul><ol start="5" type="1"><li><strong>得出结论</strong>：</li></ol><ul><li>TMTS能基于机器人手指简单运动区分材料、曲率和压力，结合深度学习可实现高准确率的物体识别和软度感知。</li></ul><h1 id="研究结果">研究结果</h1><h2id="tmts的工作机制与设计策略相关结果">TMTS的工作机制与设计策略相关结果</h2><p><strong>多模态测量机制</strong>：TMTS由七层结构组成，不同层实现不同功能。通过接触 - 分离运动，可同时实现材料、曲率和压力的多模态测量。例如，在材料识别方面，利用PI和PTFE不同的得电子能力，通过计算电压比</p><p><span class="math display">$$R_{mat}=\frac{V_{C1}}{V_{C2}}$$</span></p><p>来确定检测材料在摩擦电序列中的相对位置；在曲率识别方面，通过特定位置的PTFE薄膜与物体接触面积的差异产生不同的TENG波形，再结合压力测量层的数据，利用</p><p><span class="math display">$$R_{curve}=\frac{|V_{Channel2}-V_{Pressure\_Channel2}|}{|V_{Channel3}-V_{Pressure\_Channel3}|}$$</span></p><p>计算曲率，且各传感模态的计算方式能确保相互影响最小.</p><p><img src="/img/pr_250415/struc.png_" /></p>]]></content>
    
    
    <categories>
      
      <category>paper reading notes</category>
      
      <category>triboelectric sensor</category>
      
    </categories>
    
    
    <tags>
      
      <tag>triboelectric sensor</tag>
      
      <tag>paper reading note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linear Regression</title>
    <link href="/2025/04/14/testfile/"/>
    <url>/2025/04/14/testfile/</url>
    
    <content type="html"><![CDATA[<h1 id="线性回归">线性回归</h1><p>回归：为自变量与因变量之间进行建模</p><p>机器学习中大多数任务与预测有关，预测问题可以分为：<strong>分类</strong>，<strong>回归</strong>两大类</p><h2 id="基本元素">基本元素：</h2><p>训练数据集/训练集</p><p>每行数据、数据点、样本</p><p>标签、目标：试图预测的对象</p><p>特征、协变量：预测所依据的自变量</p><p>样本数：<span class="math inline"><em>n</em></span></p><h2 id="线性模型">线性模型</h2><p><spanclass="math display"><strong>ŷ</strong> = <strong>X</strong><strong>w</strong> + <em>b</em></span></p><p>在这个求和过程中将使用广播机制，<spanclass="math inline"><strong>w</strong></span>表示权重矩阵</p><h2 id="损失函数">损失函数</h2><p><em>损失函数</em>（lossfunction）能够量化目标的<em>实际</em>值与<em>预测</em>值之间的差距。回归问题中最常用的损失函数是平方误差函数。当样本𝑖的预测值为𝑦^(𝑖)，其相应的真实标签为𝑦(𝑖)时，平方误差可以定义为以下公式： <span class="math display">$$l^{(i)}(\mathbf{w}, b) = \frac{1}{2} \left(\hat{y}^{(i)} -y^{(i)}\right)^2.$$</span> 常数1/2将在后续方便进行求导计算。</p><p><img src="/img/testfile1/fit-linreg.png" /></p><p>为了度量模型在整个数据集上的质量，我们需计算在训练集𝑛个样本上的损失均值（也等价于求和）<span class="math display">$$L(\mathbf{w}, b) =\frac{1}{n}\sum_{i=1}^n l^{(i)}(\mathbf{w}, b)=\frac{1}{n} \sum_{i=1}^n \frac{1}{2}\left(\mathbf{w}^\top\mathbf{x}^{(i)} + b - y^{(i)}\right)^2.$$</span> 将损失关于𝑤的导数设为0，得到解析解： <spanclass="math display"><strong>w</strong><sup>*</sup> = (<strong>X</strong><sup>⊤</sup><strong>X</strong>)<sup>−1</sup><strong>X</strong><sup>⊤</sup><strong>y</strong>.</span>像线性回归这样的简单问题存在解析解，但并不是所有的问题都存在解析解。</p><h2 id="随机梯度下降">随机梯度下降</h2><p>在我们无法得到解析解的情况下，我们仍然可以使用<strong>梯度下降</strong>的方法有效地训练模型。</p><p>梯度下降最简单的用法是计算损失函数（数据集中所有样本的损失均值）关于模型参数的导数（在这里也可以称为梯度）。但实际中的执行可能会<strong>非常慢</strong>：因为在每一次更新参数之前，我们必须遍历整个数据集。</p><p>因此，我们通常会在每次需要计算更新的时候随机抽取一小批样本，这种变体叫做<strong>小批量随机梯度下降</strong>,其步骤如下：</p><ol type="1"><li>随机抽样一个小批量<span class="math inline">ℬ</span></li><li>计算小批量的平均损失关于模型参数的导数（梯度）</li><li>将梯度乘以一个预先确定的正数𝜂，并从当前参数的值中减掉</li></ol><p><span class="math display">$$(\mathbf{w},b) \leftarrow (\mathbf{w},b) - \frac{\eta}{|\mathcal{B}|}\sum_{i \in \mathcal{B}} \partial_{(\mathbf{w},b)}l^{(i)}(\mathbf{w},b).$$</span></p><p>·|𝐵|表示每个小批量中的样本数（批量大小）</p><p>·<spanclass="math inline"><em>η</em></span>表示<strong>学习率</strong></p><p>批量大小和学习率的值通常是手动预先指定，而不是通过模型训练得到的。这些可以调整但不在训练过程中更新的参数称为<strong>超参数</strong>。</p><p><em>调参</em>（hyperparameter tuning）是选择超参数的过程。</p><p>超参数通常是我们根据训练迭代结果来调整的，而训练迭代结果是在独立的<em>验证数据集</em>（validationdataset）上评估得到的。</p><p>事实上，难做到的是找到一组参数，这组参数能够在我们从未见过的数据上实现较低的损失，这一挑战被称为<em>泛化</em>（generalization）。</p><h2 id="线性回归模型的实现">线性回归模型的实现</h2><p>在训练我们的模型时，我们经常希望能够同时处理整个小批量的样本。为了实现这一点，需要我们对计算进行<strong>矢量化</strong>，从而利用线性代数库，而不是在Python中编写开销高昂的for循环。</p><h2 id="从线性回归到深度网络">从线性回归到深度网络</h2><p>线性回归是一个单层神经网络。</p><p><img src="/img/testfile1/singleneuron.png" /></p><p>该图只显示连接模式，即只显示每个输入如何连接到输出，隐去了权重和偏置的值。</p><p>对于线性回归，每个输入都与每个输出（在本例中只有一个输出）相连，我们将这种变换称为<strong>全连接层</strong>（fully-connectedlayer）或称为<strong>稠密层</strong>（dense layer）。</p>]]></content>
    
    
    <categories>
      
      <category>Notes</category>
      
      <category>deep learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>deep learning</tag>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
